# Build a crimild-based application, linking it with Crimild libraries
#
# Arguments:
# - CRIMILD_APP_NAME: (Required) Name for the example project
# - CRIMILD_APP_SOURCE_DIRECTORIES: (Required) Base directory for sources
# - CRIMILD_APP_INCLUDE_DIRECTORIES: (Required) Base directory for includes
# - CRIMILD_APP_TARGET_PROPERTIES: (Optional) Additional properties for the app
# - CRIMILD_APP_ASSETS_DIRECTORY: (Optional) Name of the assets directory, relative to source path
# - CRIMILD_APP_INDEX_FILE: (Optional) For Emscripten. Path to the index.html file

MESSAGE( "Configuring ${CRIMILD_APP_NAME} app" )

INCLUDE( MacroConfigureSystem )

IF ( CRIMILD_ENABLE_TESTS )
	ENABLE_TESTING()
ENDIF ( CRIMILD_ENABLE_TESTS )

FOREACH( ITR ${CRIMILD_APP_SOURCE_DIRECTORIES} )
	FILE( GLOB_RECURSE TMP_FILES "${ITR}/*.hpp" )
	SET( CRIMILD_APP_HEADER_FILES ${CRIMILD_APP_HEADER_FILES} ${TMP_FILES} )

	FILE( GLOB_RECURSE TMP_FILES "${ITR}/*.cpp" )
	SET( CRIMILD_APP_SOURCE_FILES ${CRIMILD_APP_SOURCE_FILES} ${TMP_FILES} )
ENDFOREACH ( ITR )

SET( CRIMILD_APP_DEPENDENCIES 
	crimild_core	
	crimild_raytracing
)

SET( CRIMILD_APP_LINK_LIBRARIES 
	crimild_core
	crimild_raytracing
)

SET( CRIMILD_APP_INCLUDE_DIRECTORIES 
	${CRIMILD_SOURCE_DIR}/core/src
	${CRIMILD_SOURCE_DIR}/raytracing/src
	${CRIMILD_APP_INCLUDE_DIRECTORIES}
) 

SET( CRIMILD_APP_LINK_DIRECTORIES 
	${CRIMILD_SOURCE_DIR}/lib
) 
	
IF ( CRIMILD_ENABLE_SCRIPTING )
	SET( CRIMILD_APP_DEPENDENCIES 
		 ${CRIMILD_APP_DEPENDENCIES} 
		 crimild_scripting 
	)
	
	SET( CRIMILD_APP_LINK_LIBRARIES 
		 ${CRIMILD_APP_LINK_LIBRARIES} 
		 crimild_scripting 
	)
	
	SET( CRIMILD_APP_INCLUDE_DIRECTORIES 
		 ${CRIMILD_APP_INCLUDE_DIRECTORIES} 
		 ${CRIMILD_SOURCE_DIR}/scripting/src
		 ${CRIMILD_SOURCE_DIR}/third-party/lua/src
	)
ENDIF ()

IF ( CRIMILD_ENABLE_PHYSICS )
	SET( CRIMILD_APP_DEPENDENCIES 
		 ${CRIMILD_APP_DEPENDENCIES} 
		 crimild_physics )
	SET( CRIMILD_APP_LINK_LIBRARIES 
		 ${CRIMILD_APP_LINK_LIBRARIES} 
		 crimild_physics )
	SET( CRIMILD_APP_INCLUDE_DIRECTORIES 
		 ${CRIMILD_APP_INCLUDE_DIRECTORIES} 
		 ${CRIMILD_SOURCE_DIR}/physics/src
		 ${CRIMILD_SOURCE_DIR}/third-party/bullet-2.82-r2704/src )
	SET( CRIMILD_APP_LINK_DIRECTORIES 
		 ${CRIMILD_APP_LINK_DIRECTORIES} 
		 ${CRIMILD_SOURCE_DIR}/third-party/bullet-2.82-r2704/lib )
ENDIF ( CRIMILD_ENABLE_PHYSICS )

IF ( CRIMILD_ENABLE_IMPORT )
	SET( CRIMILD_APP_DEPENDENCIES 
		${CRIMILD_APP_DEPENDENCIES} 
		crimild_import )
	SET( CRIMILD_APP_LINK_LIBRARIES 
		${CRIMILD_APP_LINK_LIBRARIES} 
		crimild_import )
	SET( CRIMILD_APP_INCLUDE_DIRECTORIES 
		${CRIMILD_APP_INCLUDE_DIRECTORIES}
		${CRIMILD_SOURCE_DIR}/import/src
		${Assimp_SOURCE_DIR}/include
  		${Assimp_SOURCE_DIR}/code )
	SET( CRIMILD_APP_LINK_DIRECTORIES 
		${CRIMILD_APP_LINK_DIRECTORIES} 
  		${Assimp_BINARY_DIR} )
ENDIF ( CRIMILD_ENABLE_IMPORT )

IF ( CRIMILD_ENABLE_GLFW OR CRIMILD_ENABLE_SDL )
	SET( CRIMILD_APP_DEPENDENCIES 
		 ${CRIMILD_APP_DEPENDENCIES} 
		 crimild_opengl
	)
	
	SET( CRIMILD_APP_LINK_LIBRARIES 
		 ${CRIMILD_APP_LINK_LIBRARIES} 
		 crimild_opengl
	)
	
	SET( CRIMILD_APP_INCLUDE_DIRECTORIES 
		 ${CRIMILD_APP_INCLUDE_DIRECTORIES} 
		 ${CRIMILD_SOURCE_DIR}/opengl/src
 	)
	
	IF ( NOT ( ${CMAKE_SYSTEM_NAME} STREQUAL "Emscripten" ) )
		SET( CRIMILD_APP_INCLUDE_DIRECTORIES 
		 	 ${CRIMILD_APP_INCLUDE_DIRECTORIES} 
		 	 ${CRIMILD_SOURCE_DIR}/third-party/glew/include
 		)
	ENDIF ()
	
ENDIF ()

IF ( CRIMILD_ENABLE_GLFW )
	SET( CRIMILD_APP_DEPENDENCIES 
		 ${CRIMILD_APP_DEPENDENCIES} 
		 crimild_glfw
	)
	
	SET( CRIMILD_APP_LINK_LIBRARIES 
		 ${CRIMILD_APP_LINK_LIBRARIES} 
		 crimild_glfw
		 glfw
	)
	
	SET( CRIMILD_APP_INCLUDE_DIRECTORIES 
		 ${CRIMILD_APP_INCLUDE_DIRECTORIES} 
		 ${CRIMILD_SOURCE_DIR}/glfw/src
 	)
	
	IF ( NOT ( ${CMAKE_SYSTEM_NAME} STREQUAL "Emscripten" ) )
		SET( CRIMILD_APP_DEPENDENCIES 
			 ${CRIMILD_APP_DEPENDENCIES} 
		 	 glfw
		)
	
		SET( CRIMILD_APP_INCLUDE_DIRECTORIES 
		 	 ${CRIMILD_APP_INCLUDE_DIRECTORIES} 
		 	 ${CRIMILD_SOURCE_DIR}/third-party/glfw/include
 		)
	
		SET( CRIMILD_APP_LINK_DIRECTORIES 
		 	 ${CRIMILD_APP_LINK_DIRECTORIES} 
		 	 ${CRIMILD_SOURCE_DIR}/third-party/glfw/src
		)
	ENDIF ()
ENDIF ()

IF ( CRIMILD_ENABLE_SFML )
	SET( CRIMILD_APP_DEPENDENCIES 
		 ${CRIMILD_APP_DEPENDENCIES} 
		 crimild_sfml
		 sfml-audio
		 sfml-graphics
		 sfml-network
		 sfml-system
		 sfml-window
	)
	SET( CRIMILD_APP_LINK_LIBRARIES 
		 ${CRIMILD_APP_LINK_LIBRARIES} 
		 crimild_sfml
		 sfml-audio
		 sfml-graphics
		 sfml-network
		 sfml-system
		 sfml-window
	)
	SET( CRIMILD_APP_INCLUDE_DIRECTORIES 
		 ${CRIMILD_APP_INCLUDE_DIRECTORIES} 
		 ${CRIMILD_SOURCE_DIR}/sfml/src
		 ${CRIMILD_SOURCE_DIR}/third-party/sfml/include
 	)
	SET( CRIMILD_APP_LINK_DIRECTORIES 
		 ${CRIMILD_APP_LINK_DIRECTORIES} 
		 ${CRIMILD_SOURCE_DIR}/third-party/sfml/lib
	)
ENDIF ()

IF ( CRIMILD_ENABLE_SDL )
	IF ( WIN32 ) 
		SET( SDL2_INCLUDE_DIR ${CRIMILD_SOURCE_DIR}/third-party/sdl/include )
		SET( SDL2_MIXER_INCLUDE_DIRS ${CRIMILD_SOURCE_DIR}/third-party/sdl_mixer/include )
		SET( SDL2_LIBRARY SDL2 SDL2main )
		SET( SDL2_MIXER_LIBRARIES SDL2_mixer )

		SET( CRIMILD_APP_LINK_DIRECTORIES 
			 ${CRIMILD_APP_LINK_DIRECTORIES}
			 ${CRIMILD_SOURCE_DIR}/third-party/sdl/lib/x86
			 ${CRIMILD_SOURCE_DIR}/third-party/sdl_mixer/lib/x86 )
	ENDIF ()

   SET( CRIMILD_APP_DEPENDENCIES
   		${CRIMILD_APP_DEPENDENCIES}
		crimild_sdl
   )

   SET( CRIMILD_APP_LINK_LIBRARIES
   		${CRIMILD_APP_LINK_LIBRARIES}
		crimild_sdl
		${SDL2_LIBRARY}
		${SDL2_MIXER_LIBRARIES}
   )

   SET( CRIMILD_APP_INCLUDE_DIRECTORIES
   		${CRIMILD_APP_INCLUDE_DIRECTORIES}
		${CRIMILD_SOURCE_DIR}/sdl/src
		${SDL2_INCLUDE_DIR}
		${SDL2_MIXER_INCLUDE_DIRS}
   )
ENDIF ()

INCLUDE_DIRECTORIES( ${CRIMILD_APP_INCLUDE_DIRECTORIES} )

LINK_DIRECTORIES( ${CRIMILD_APP_LINK_DIRECTORIES} )

IF ( APPLE )
	SET( CRIMILD_APP_LINK_LIBRARIES 
		${CRIMILD_APP_LINK_LIBRARIES} 
		"-framework Cocoa -framework OpenGL -framework IOKit -framework CoreVideo" )
ENDIF ( APPLE )

IF ( WIN32 ) 
	SET( CRIMILD_APP_LINK_LIBRARIES ${CRIMILD_APP_LINK_LIBRARIES} opengl32 glu32 winmm )
ENDIF ( WIN32 )

ADD_EXECUTABLE( ${CRIMILD_APP_NAME}
	${CRIMILD_APP_SOURCE_FILES}
	${CRIMILD_APP_HEADER_FILES} )

IF ( NOT CRIMILD_APP_ASSETS_DIRECTORY )
   IF ( EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/assets )
   	  SET ( CRIMILD_APP_ASSETS_DIRECTORY assets )
   ENDIF ()
ENDIF ()

IF ( CRIMILD_BUNDLE_APPS )
	IF ( APPLE )
	   INCLUDE( MacroBundleAppOSX )
	   CRIMILD_BUNDLE_APP()
	ENDIF ( APPLE )

	IF ( WIN32 )
		SET( CRIMILD_APP_TARGET_PROPERTIES
			 ${CRIMILD_APP_TARGET_PROPERTIES}
  			WIN32 TRUE
  			WIN32_EXECUTABLE TRUE
		)
	ENDIF ( WIN32 )
ENDIF( CRIMILD_BUNDLE_APPS )

IF ( DEFINED CRIMILD_APP_TARGET_PROPERTIES )
   SET_TARGET_PROPERTIES( ${CRIMILD_APP_NAME} PROPERTIES ${CRIMILD_APP_TARGET_PROPERTIES} )
ENDIF ()

TARGET_LINK_LIBRARIES( ${CRIMILD_APP_NAME} ${CRIMILD_APP_LINK_LIBRARIES} )

ADD_DEPENDENCIES( ${CRIMILD_APP_NAME} ${CRIMILD_APP_DEPENDENCIES} )

IF ( ${CMAKE_SYSTEM_NAME} MATCHES "Emscripten" )
    IF ( NOT CRIMILD_APP_INDEX_FILE )
   	  IF ( EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/index.html )
   	  	 SET ( CRIMILD_APP_INDEX_FILE index.html )
   	  ENDIF ()
    ENDIF ()

	SET ( CRIMILD_EMSCRIPTEN_LINK_FLAGS
		" -s DEMANGLE_SUPPORT=1 -s ALLOW_MEMORY_GROWTH=1 -s USE_WEBGL2=1 -s FULL_ES2=1 -s FULL_ES3=1 -s GL_ASSERTIONS=1 -s GL_DEBUG=1 -s TRACE_WEBGL_CALLS=0"
	)

    IF ( CRIMILD_APP_ASSETS_DIRECTORY )
	   SET ( CRIMILD_EMSCRIPTEN_LINK_FLAGS
	   	   ${CRIMILD_EMSCRIPTEN_LINK_FLAGS}
		   " -s --preload-file ${CRIMILD_APP_ASSETS_DIRECTORY}"
		   )
	    #SET_TARGET_PROPERTIES( ${CRIMILD_APP_NAME} PROPERTIES LINK_FLAGS "-s DEMANGLE_SUPPORT=1 -s ALLOW_MEMORY_GROWTH=1 -s USE_WEBGL2=1 -s FULL_ES3=1 -s GL_ASSERTIONS=1 -s GL_DEBUG=1 -s --preload-file ${CRIMILD_APP_ASSETS_DIRECTORY}" )
		FILE ( INSTALL ${CMAKE_CURRENT_SOURCE_DIR}/${CRIMILD_APP_ASSETS_DIRECTORY} DESTINATION ${CMAKE_CURRENT_BINARY_DIR} )
	ENDIF ()

	SET_TARGET_PROPERTIES( ${CRIMILD_APP_NAME} PROPERTIES LINK_FLAGS ${CRIMILD_EMSCRIPTEN_LINK_FLAGS} )

	IF ( CRIMILD_APP_INDEX_FILE )
       CONFIGURE_FILE( ${CMAKE_CURRENT_SOURCE_DIR}/${CRIMILD_APP_INDEX_FILE} ${CMAKE_CURRENT_BINARY_DIR} COPYONLY )
	ENDIF ()
ENDIF ()

