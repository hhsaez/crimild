name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Windows (Release)"
            os: windows-latest
            cmake_args: '-G "Visual Studio 17 2022" -A x64'
            build_type: Release
            crimild_build_flags: '-DCRIMILD_BUILD_TESTS=ON -DCRIMILD_BUILD_EDITOR=ON -DCRIMILD_BUILD_PLAYER=ON -DCRIMILD_BUILD_EXAMPLES=ON'
          - name: "Windows (Debug)"
            os: windows-latest
            cmake_args: '-G "Visual Studio 17 2022" -A x64'
            build_type: Debug
            crimild_build_flags: '-DCRIMILD_BUILD_TESTS=ON -DCRIMILD_BUILD_EDITOR=ON -DCRIMILD_BUILD_PLAYER=ON -DCRIMILD_BUILD_EXAMPLES=ON'
          - name: "Ubuntu (Release)"
            os: ubuntu-latest
            cmake_args: '-DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang'
            build_type: Release
            crimild_build_flags: '-DCRIMILD_BUILD_TESTS=ON -DCRIMILD_BUILD_EDITOR=OFF -DCRIMILD_BUILD_PLAYER=OFF -DCRIMILD_BUILD_EXAMPLES=OFF'
          - name: "Ubuntu (Debug)"
            os: ubuntu-latest
            cmake_args: '-DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang'
            build_type: Release
            crimild_build_flags: '-DCRIMILD_BUILD_TESTS=ON -DCRIMILD_BUILD_EDITOR=OFF -DCRIMILD_BUILD_PLAYER=OFF -DCRIMILD_BUILD_EXAMPLES=OFF'
          - name: "Mac OSX (Release)"
            os: macos-latest
            cmake_args: ''
            build_type: Release
            crimild_build_flags: '-DCRIMILD_BUILD_TESTS=ON -DCRIMILD_BUILD_EDITOR=ON -DCRIMILD_BUILD_PLAYER=ON -DCRIMILD_BUILD_EXAMPLES=ON'
          - name: "Mac OSX (Debug)"
            os: macos-latest
            cmake_args: ''
            build_type: Debug
            crimild_build_flags: '-DCRIMILD_BUILD_TESTS=ON -DCRIMILD_BUILD_EDITOR=ON -DCRIMILD_BUILD_PLAYER=ON -DCRIMILD_BUILD_EXAMPLES=ON'

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - if: matrix.os == 'ubuntu-latest'
        name: Setup
        run: |
          sudo apt update
          sudo apt install libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev
          sudo apt install clang-14

      - name: Build
        run: |
          cmake ${{ matrix.cmake_args }} -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} ${{matrix.crimild_build_flags}}
          cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}} --parallel 2

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{matrix.build_type}} --output-on-failure -V --parallel 2
